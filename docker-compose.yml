version: '3'

services:
  # Single container running MPI processes
  mpi_service:
    build: .
    container_name: mpi_service
    volumes:
      - ./mpi:/app/mpi:rw
      - ./a3:/app/a3:rw
    environment:
      - NUM_PROCESSORS=6  # Total processors (1 master + 5 workers)
      - QUEUE_DATA_DIR=/app/a3/queue_service/queue_data
      - TRANSACTION_QUEUE_FILE=TQ1.json
      - TRANSACTION_QUEUE_FILE2=TQ2.json
      - RESULTS_QUEUE_FILE=PQ1.json
      - MODEL_PATH=/app/mpi/fraud_rf_model.pkl
      - PYTHONUNBUFFERED=1
    networks:
      - mpi_network
    restart: always  # Ensure the service keeps trying to restart until successful

  # Web UI service
  web_ui:
    build:
      context: .
      dockerfile: Dockerfile.web_ui
    container_name: web_ui
    ports:
      - "7600:7600"
    volumes:
      - ./a3:/app/a3:rw
      - ./web_ui_file.py:/app/web_ui_file.py:ro
    environment:
      - QUEUE_DATA_DIR=/app/a3/queue_service/queue_data
      - TRANSACTION_QUEUE_FILE=TQ1.json
      - TRANSACTION_QUEUE_FILE2=TQ2.json
      - RESULTS_QUEUE_FILE=PQ1.json
    command: python web_ui_file.py
    networks:
      - mpi_network
    restart: always  # Ensure the service keeps trying to restart until successful
    depends_on:
      - mpi_service

networks:
  mpi_network:
    driver: bridge
    name: mpi_network
