services:
  # Queue Service from Assignment 3
  queue_service:
    image: python:3.9-slim
    container_name: queue_service
    ports:
      - "7501:7500"
    volumes:
      - "../assignment 3/queue_service:/app"
    working_dir: /app
    # Use a faster startup command by pre-installing dependencies
    command: bash -c "apt-get update && apt-get install -y curl && pip install -r requirements.txt && python -m app.main"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7500/"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - mpi_network

  # Single container running the prediction service
  prediction_service:
    build: .
    container_name: prediction_service
    ports:
      - "22:22"
    environment:
      - NUM_PROCESSORS=5
      # Connect to the queue service in the same network
      - QUEUE_SERVICE_URL=http://queue_service:7500
      - TRANSACTION_QUEUE=transactions
      - RESULTS_QUEUE=predictions
      - AUTH_USERNAME=admin
      - AUTH_PASSWORD=admin_password
    volumes:
      - ./mpi:/app/mpi
    # Run with a single process for simplicity and reliability
    command: python3 prediction_service.py
    depends_on:
      queue_service:
        condition: service_healthy
    networks:
      - mpi_network
  
  # Web UI for testing
  web_ui:
    build:
      context: .
      dockerfile: Dockerfile.web_ui
    container_name: web_ui
    ports:
      - "7600:7600"
    environment:
      # Connect to the queue service in the same network
      - QUEUE_SERVICE_URL=http://queue_service:7500
      - TRANSACTION_QUEUE=transactions
      - RESULTS_QUEUE=predictions
      - AUTH_USERNAME=admin
      - AUTH_PASSWORD=admin_password
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin_password
    depends_on:
      queue_service:
        condition: service_healthy
    networks:
      - mpi_network

  # No worker nodes needed for the simplified approach

networks:
  mpi_network:
    driver: bridge
    name: mpi_network
